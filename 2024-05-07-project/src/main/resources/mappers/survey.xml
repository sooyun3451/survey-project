<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.surveyProject.project.mapper.SurveyMapper">
	

   <select id="getSearchList" parameterType="java.util.HashMap" resultType="com.surveyProject.project.domain.survey.survey.SurveyInformation">
      SELECT * FROM survey_information WHERE survey_title LIKE '%${word}%' ;
   </select>

	<select id="SurveyComplete" parameterType="Integer"
	resultType="com.surveyProject.project.domain.survey.survey.SurveyComplete">
		select
			ai.survey_code,
			si.survey_title,
			ai.survey_per_money
		from
			apply_information ai 
			left outer join survey_information si on(ai.survey_code = si.survey_code)
		where
			ai.survey_code = #{survey_code}
	</select>
	
	<update id="updateSurveyCompleteSurvey" parameterType="Integer">
		update
			survey_information
		set
			participant_count = participant_count + 1
		where
			survey_code = #{survey_code};
	</update>
	
	<update id="updateSurveyCompleteUser" parameterType="hashmap">
		update
			user_dtl
		set
			user_money = user_money + #{user_money}
		where
			user_code = #{user_code};
	</update>
	
	<insert id="updateSurveyCompleteRespondent" parameterType="hashmap">
		insert into
			survey_respondent
		values
			(
			0, 
			#{survey_code}, 
			#{user_code}, 
			now()
			);
	</insert>
	
	<update id="updateSurveyStatus" parameterType="hashmap">
		UDATE
			survey_information si
			left outer join apply_information ai ON(si.survey_code = ai.survey_code)
		SET
			si.survey_status =
			CASE
				WHEN ai.participant_max >= si.participant_count then "4"
				WHEN now() >= ai.surey_period_stop then "3"

				else si.survey_status
			END	
		WHERE
			si.survey_code = #{survey_code}
	</update>

	<select id="getSurveyDetailTitle" parameterType="Integer" resultType="com.surveyProject.project.domain.survey.survey.SurveyInformation">
		SELECT survey_code, survey_title, survey_content FROM survey_information
		WHERE survey_code = #{surveyCode};
	</select>
	
	<select id="getSurveyDetailQuestion" parameterType="Integer" resultType="com.surveyProject.project.domain.survey.survey.SurveyInformation">
		SELECT question_code, question_title, detail_question ,question_essential, select_type FROM survey_question
		WHERE survey_code = #{surveyCode};
	</select>
	
	<select id="getSurveyDetailOption" parameterType="Integer" resultType="com.surveyProject.project.domain.survey.survey.SurveyInformation">
		SELECT option_code, question_code, option_content FROM question_choice
		WHERE question_code = #{question_code};
	</select>
	
	<insert id="saveSurveyAnswer" parameterType="list">
	    INSERT INTO survey_answer (
	        survey_code, 
	        question_code, 
	        option_code, 
	        short_answer, 
	        duplication_answer, 
	        subjective_answer, 
	        detail_answer
	    ) VALUES 
	    <foreach collection="answers" item="answer" separator=",">
	        (
	        #{answer.survey_code},
	        #{answer.question_code},
	        #{answer.option_code},
	        #{answer.short_answer},
	        #{answer.duplication_answer},
	        #{answer.subjective_answer},
	        #{answer.detail_answer}
	        )
	    </foreach>
	</insert>

	<select id="getTopSurvey" resultType="com.surveyProject.project.web.dto.surveypage.surveylist.TopSurveyResDto">
		SELECT survey_code, survey_title
		FROM survey_information
		ORDER BY participant_count DESC
		LIMIT 3;

	</select>

	<select id="getSurveyList" parameterType="hashmap" resultType="com.surveyProject.project.domain.survey.survey.SurveyList">
	    SELECT si.survey_code,
	           si.survey_title,
	           ai.survey_per_money,
	           ai.survey_period_start,
	           ai.survey_period_stop,
	           ai.category_code,
	           ai.survey_target_gender,
	           ai.survey_target_age,
	           cd.category_name
	    FROM survey_information si
	    LEFT JOIN apply_information ai
	    ON si.survey_code = ai.survey_code
	    LEFT JOIN category_dtl cd
	    ON ai.category_code = cd.category_code
	    WHERE ai.survey_class = '개인';
	</select>
	 
	<select id="getSurveyGroupList" parameterType="hashmap" resultType="com.surveyProject.project.domain.survey.survey.SurveyList">
		SELECT si.survey_code,
		si.survey_title,
		ai.application_class,
		ai.survey_per_money,
		ai.survey_period_start,
		ai.survey_period_stop,
		ai.category_code,
		ai.survey_target_gender,
		ai.survey_target_age,
		cd.category_name
		FROM survey_information si
		INNER JOIN apply_information ai
		ON si.survey_code = ai.survey_code
		INNER JOIN category_dtl cd
		ON ai.category_code = cd.category_code
		WHERE ai.survey_class = '단체' and si.survey_status = 2 ;
	</select>
	
	<select id="getSurveyStart" parameterType="integer" resultType="com.surveyProject.project.domain.survey.survey.SurveyList">
		select 
			si.survey_title,
			ai.survey_period_start,
			ai.survey_period_stop,
			ai.survey_per_money
		from 
			apply_information ai left outer join survey_information si on(ai.survey_code = si.survey_code)
		where 
			ai.survey_code = #{survey_code} AND ai.survey_class = '개인'
	</select>
	
	<select id="getSurveyGroupStart" parameterType="integer" resultType="com.surveyProject.project.domain.survey.survey.SurveyList">
		select 
			si.survey_title,
			ai.survey_period_start,
			ai.survey_period_stop
		from 
			apply_information ai left outer join survey_information si on(ai.survey_code = si.survey_code)
		where
			ai.survey_code = #{survey_code} AND ai.survey_class = '단체'
	</select>
	
</mapper>